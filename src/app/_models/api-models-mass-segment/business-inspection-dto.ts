import { DirBusinessInspectionResult, Directory } from '..';

import { getId } from '@app/services/util/getId';

export class BusinessInspection {
  accountsPayable: number;
  accountsReceivable: number;
  addInn: string;
  applicantId: number;
  applicationId: number;
  businessDescription: string;
  businessTerm: number;
  cash: number;
  clientContact: string;
  clientName: string;
  companyActivityType: Directory;
  created: string | Date;
  dirBusinessInspectionResult: DirBusinessInspectionResult;
  dirCreditPurpose: Directory;
  earnings: number;
  equity: number;
  factAddress: string;
  factBusinessOwner: string;
  grossProfitMargin: number;
  id: number;
  inn: string;
  innName: string;
  isLegalEntity: boolean;
  isThirdPartyLoan: boolean;
  isVtbClient: boolean;
  legalAddress: string;
  netProfit: number;
  nonResidRealEstate: number;
  operatingProfitMargin: number;
  regDate: string | Date;
  residRealEstate: number;
  resultComment: string;
  thirdPartyInn: string;
  transport: number;
  updated: string | Date;
}

export class BusinessInspectionDto {
  accountsPayable: number;
  accountsReceivable: number;
  addInn: string;
  applicantId: number;
  applicationId: number;
  businessDescription: string;
  businessTerm: number;
  cash: number;
  clientContact: string;
  clientName: string;
  companyActivityTypeId: number;
  created: string | Date;
  dirBusinessInspectionResultId: number;
  dirCreditPurposeId: number;
  earnings: number;
  equity: number;
  factAddress: string;
  factBusinessOwner: string;
  grossProfitMargin: number;
  id: number;
  inn: string;
  innName: string;
  isLegalEntity: boolean;
  isThirdPartyLoan: boolean;
  isVtbClient: boolean;
  legalAddress: string;
  netProfit: number;
  nonResidRealEstate: number;
  operatingProfitMargin: number;
  regDate: string | Date;
  residRealEstate: number;
  resultComment: string;
  thirdPartyInn: string;
  transport: number;
  updated: string | Date;

  constructor(obj: BusinessInspection) {
    this.accountsPayable = obj.accountsPayable;
    this.accountsReceivable = obj.accountsReceivable;
    this.addInn = obj.addInn;
    this.applicantId = obj.applicantId;
    this.applicationId = obj.applicationId;
    this.businessDescription = obj.businessDescription;
    this.businessTerm = obj.businessTerm;
    this.cash = obj.cash;
    this.clientContact = obj.clientContact;
    this.clientName = obj.clientName;
    this.companyActivityTypeId = getId(obj.companyActivityType);
    this.created = obj.created;
    this.dirBusinessInspectionResultId = getId(obj.dirBusinessInspectionResult);
    this.earnings = obj.earnings;
    this.dirCreditPurposeId = getId(obj.dirCreditPurpose);
    this.equity = obj.equity;
    this.factAddress = obj.factAddress;
    this.factBusinessOwner = obj.factBusinessOwner;
    this.grossProfitMargin = obj.grossProfitMargin;
    this.id = obj.id;
    this.inn = obj.inn;
    this.innName = obj.innName;
    this.isLegalEntity = obj.isLegalEntity;
    this.isThirdPartyLoan = obj.isThirdPartyLoan;
    this.isVtbClient = obj.isVtbClient;
    this.legalAddress = obj.legalAddress;
    this.netProfit = obj.netProfit;
    this.nonResidRealEstate = obj.nonResidRealEstate;
    this.operatingProfitMargin = obj.operatingProfitMargin;
    this.regDate = obj.regDate;
    this.residRealEstate = obj.residRealEstate;
    this.resultComment = obj.resultComment;
    this.thirdPartyInn = obj.thirdPartyInn;
    this.transport = obj.transport;
    this.updated = obj.updated;
  }
}
